/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ContactTracingStaffRole;

import Busines.EcoSystem;
import Business.University.Student;
import Business.UserAccount.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PeiLingChiang
 */
public class ContactTracingStaffWorkAreaJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    UserAccount userAccount;
    EcoSystem business;
    int classroomID;
    /**
     * Creates new form ContactTracingStaffWorkAreaJPanel
     */
    public ContactTracingStaffWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        
        populatePositiveTable();
        btnSend.setEnabled(false);
    }
    
    public void populatePositiveTable(){
        DefaultTableModel model = (DefaultTableModel)tblPositive.getModel();
        model.setRowCount(0);
        for (Student s : business.getStudentDir().getStudentList()){
            if (s.getTestingStatus().equals("positive") && s.isContactTraced()==false){
                Object[] row = new Object[2];
                row[0] = s;
                row[1] = s.getClassroomID();
                model.addRow(row);
            }
        }
    }
    
    public void populateContactTable(int classroomID){
        DefaultTableModel model = (DefaultTableModel)tblContact.getModel();
        model.setRowCount(0);
        for (Student s : business.getStudentDir().getStudentList()){
            //students who are negative or never tested
            //don't have contact status (close contact/quarantine/hospital registering...)
            //have same classroomID
            if ((s.getTestingStatus().equals("") || s.getTestingStatus().equals("negative")) 
                && s.getContactStatus().equals("") && s.getClassroomID() == classroomID ){
                Object[] row = new Object[2];
                row[0] = s;
                row[1] = s.getClassroomID();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblPositive = new javax.swing.JTable();
        btnFind = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblContact = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSend = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblPositive.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ClassroomID"
            }
        ));
        jScrollPane2.setViewportView(tblPositive);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 142, 166, 191));

        btnFind.setText("Find Close Contact");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });
        add(btnFind, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 351, 166, -1));

        tblContact.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ClassroomID"
            }
        ));
        jScrollPane3.setViewportView(tblContact);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(547, 142, 166, 191));

        jLabel1.setText("Positive Cases");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 120, -1, -1));

        jLabel2.setText("Close Contact");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(547, 120, -1, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel3.setText("Contact Tracing Staff Work Area");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(308, 36, -1, -1));

        btnSend.setText("Send to Qurantine Org");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        add(btnSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(547, 351, 166, -1));

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 380, 170, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblPositive.getSelectedRow();
        if (selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else {
            classroomID = (int)tblPositive.getValueAt(selectedRow, 1);
            Student s = (Student)tblPositive.getValueAt(selectedRow, 0);
            s.setContactTraced(true);
            populateContactTable(classroomID);
        }
        
        btnSend.setEnabled(true);
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblContact.getSelectedRow();
        if (selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        else {
            Student s = (Student)tblContact.getValueAt(selectedRow, 0);
            s.setContactStatus("close contact");
            populateContactTable(classroomID);
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblPositive.getModel();
        model.setRowCount(0);
        for (Student s : business.getStudentDir().getStudentList()){
            if (s.getTestingStatus().equals("positive") && s.isContactTraced()==false){
                Object[] row = new Object[2];
                row[0] = s;
                row[1] = s.getClassroomID();
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblContact;
    private javax.swing.JTable tblPositive;
    // End of variables declaration//GEN-END:variables
}
