/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Hospital.HospitalAdminRole;

import Business.Enterprise.Enterprise;
import Business.Hospital.Doctor;
import Business.Hospital.Patient;
import Business.Hospital.PatientDirectory;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.University.StudentDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jiaqi Wang
 * @author PeiLingChiang
 */
public class PatientManagementJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private PatientDirectory patientDirentory;

    PatientManagementJPanel(JPanel userprocesscontainer, Enterprise enterprise, PatientDirectory patientDirentory) {
        initComponents(); 
        this.userProcessContainer = userprocesscontainer;
        this.enterprise = enterprise;
        this.patientDirentory = patientDirentory;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel)patientJTable.getModel();
        model.setRowCount(0);
        for(Patient p : patientDirentory.getPatientList()){
            Object row[] = new Object[6];
            row[0] = p;
            row[1] = p.getStudent().getGender();
            row[2] = p.getStudent().getAge();
            row[3] = p.getStudent().getBloodtype();
            row[4] = p.getSymptoms();
            row[5] = p.getStudent().getRegisteringStatus();
            model.addRow(row);
        }
    }

    private void refreshTable(String patientName) {
        DefaultTableModel model = (DefaultTableModel)patientJTable.getModel();
        model.setRowCount(0);
        for(Patient p : patientDirentory.getPatientList()){
            if(p.getStudent().getName().equalsIgnoreCase(patientName)){
                Object row[] = new Object[6];
                row[0] = p;
                row[1] = p.getStudent().getGender();
                row[2] = p.getStudent().getAge();
                row[3] = p.getStudent().getBloodtype();
                row[4] = p.getSymptoms();
                row[5] = p.getStudent().getRegisteringStatus();
                model.addRow(row);
            }
        }
}
    /**
     * Creates new form PatientManagementJPanel
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientJTable = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtpatientName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        backJButton2 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Patient Management");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 0, 275, 36));

        patientJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Gender", "Age", "Blood Type", "Symptom(s)", "Register Status"
            }
        ));
        jScrollPane1.setViewportView(patientJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 109, 532, 246));

        btnRemove.setText("Remove Patient");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(629, 361, 150, -1));

        jLabel3.setText("Please enter patient's name:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(333, 73, -1, -1));
        add(txtpatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(514, 68, 94, -1));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(614, 68, -1, -1));

        backJButton2.setText("<< Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });
        add(backJButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int row = patientJTable.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Patient p = (Patient)patientJTable.getValueAt(row, 0);
        
        //remove from system's patient list
        patientDirentory.getPatientList().remove(p);
        
        //remove from doctor's patient list
        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (o instanceof DoctorOrganization){
                for (Doctor d : o.getPersonDirectory().getDoctorList()){
                    if (d.getPatientDirentory().getPatientList().contains(p)){
                        d.getPatientDirentory().removePatient(p);
                    }
                }
            }
        }
        
        //沒有移除他的register work request
        
        populateTable();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String patientName = txtpatientName.getText();
        refreshTable(patientName);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton2;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientJTable;
    private javax.swing.JTextField txtpatientName;
    // End of variables declaration//GEN-END:variables

}
