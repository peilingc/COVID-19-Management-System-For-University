/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Hospital.HospitalAdminRole;

import Busines.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Hospital.Doctor;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Role.DoctorRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jiaqi wang
 * @author PeiLingChiang
 */
public class DoctorManagementJPanel extends javax.swing.JPanel {
     
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private EcoSystem system;
    private Organization doctorOrg;
    private UserAccount userAccount;
    private Doctor doctor;
    
    /**
     * Creates new form DoctorManagementJPanel
     */
    DoctorManagementJPanel(JPanel userprocesscontainer, Enterprise enterprise, EcoSystem system) {
       initComponents();
       this.userProcessContainer = userprocesscontainer;
       this.enterprise = enterprise;
       this.system = system;
       
       //get doctor org
        for (Organization o : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (o instanceof DoctorOrganization){
                doctorOrg = o;
            }
        }
       
       populateTable();
       txtName.setEnabled(false);
       txtID.setEnabled(false);
       txtDep.setEnabled(false);
       txtJob.setEnabled(false);
       txtUserName.setEnabled(false);
       txtPassword.setEnabled(false);
       btnSubmit.setEnabled(false);
       btnUpdate.setEnabled(false);
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel)DoctorJTable.getModel();
        model.setRowCount(0);
        for (UserAccount ua : doctorOrg.getUserAccountDirectory().getUserAccountList()){
            Object[] row = new Object[4];
            row[0] = ua.getPerson();
            row[1] = ua;
            row[2] = ((Doctor)ua.getPerson()).getDepartment();
            row[3] = ((Doctor)ua.getPerson()).getJobTitle();
            model.addRow(row);
        }
    }

    private void refreshTable(String doctorName) {
        DefaultTableModel model = (DefaultTableModel)DoctorJTable.getModel();
        model.setRowCount(0);
        for (UserAccount ua : doctorOrg.getUserAccountDirectory().getUserAccountList()){
            if (ua.getPerson().getName().equalsIgnoreCase(doctorName)){
                Object[] row = new Object[4];
                row[0] = ua.getPerson();
                row[1] = ua;
                row[2] = ((Doctor)ua.getPerson()).getDepartment();
                row[3] = ((Doctor)ua.getPerson()).getJobTitle();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtDocName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DoctorJTable = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        txtDep = new javax.swing.JTextField();
        txtJob = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Doctor Management");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 292, 29));

        jLabel2.setText("Please enter doctor's name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, -1, -1));
        add(txtDocName, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 90, 120, -1));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, -1, -1));

        DoctorJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor's Name", "Username", "Department", "Job Titile"
            }
        ));
        jScrollPane1.setViewportView(DoctorJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 452, 300));

        btnView.setText("View Doctor");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, 120, -1));

        btnRemove.setText("Remove Doctor");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 450, 130, -1));

        btnCreate.setText("Create Doctor");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 450, 130, -1));

        jLabel3.setText("Name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 160, -1, -1));

        jLabel4.setText("ID");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 200, -1, -1));

        jLabel5.setText("Department");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 240, -1, -1));

        jLabel6.setText("Job Title");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 280, -1, -1));

        jLabel7.setText("Username");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 320, -1, -1));

        jLabel8.setText("Password");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 360, -1, -1));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 350, 120, -1));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 150, 120, -1));
        add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 190, 120, -1));
        add(txtDep, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 230, 120, -1));
        add(txtJob, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 270, 120, -1));
        add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 310, 120, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 400, 80, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 400, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String doctorName = txtDocName.getText();
        refreshTable(doctorName);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here: addSupplierJPanel asJP = new addSupplierJPanel(userProcessContainer, system.getSupplierDirectory());
        int row = DoctorJTable.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        userAccount = (UserAccount)DoctorJTable.getValueAt(row, 1);
        doctor =(Doctor) userAccount.getPerson();
        txtName.setText(doctor.getName());
        txtID.setText(String.valueOf(doctor.getId()));
        txtDep.setText(doctor.getDepartment());
        txtJob.setText(doctor.getJobTitle());
        txtUserName.setText(userAccount.getUsername());
        txtPassword.setText(userAccount.getPassword());
        
        btnUpdate.setEnabled(true);
        txtName.setEnabled(true);
        txtDep.setEnabled(true);
        txtJob.setEnabled(true);
        txtPassword.setEnabled(true);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int row = DoctorJTable.getSelectedRow();if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        UserAccount ua = (UserAccount)DoctorJTable.getValueAt(row, 1);
        system.getDoctorDir().getDoctorList().remove((Doctor)ua.getPerson());
        doctorOrg.getPersonDirectory().getDoctorList().remove((Doctor)ua.getPerson());
        doctorOrg.getUserAccountDirectory().getUserAccountList().remove(ua);
        populateTable();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        txtName.setText("");
        txtID.setText("");
        txtDep.setText("");
        txtJob.setText("");
        txtUserName.setText("");
        txtPassword.setText("");
        
        btnSubmit.setEnabled(true);
        txtUserName.setEnabled(true);
        txtName.setEnabled(true);
        txtDep.setEnabled(true);
        txtJob.setEnabled(true);
        txtPassword.setEnabled(true);
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String password = txtPassword.getText();
        String department = txtDep.getText();
        String jobTitle = txtJob.getText();
        
        if (txtName.getText().length()==0 || txtPassword.getText().length()==0 || 
            txtDep.getText().length()==0 || txtJob.getText().length()==0 )
        {
            JOptionPane.showMessageDialog(null, "Please ensure all fields are entered!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        userAccount.setPassword(password);
        doctor.setDepartment(department);
        doctor.setJobTitle(jobTitle);
        doctor.setName(name);
        
        JOptionPane.showMessageDialog(null, "Successfully updated!");
        populateTable();
        txtName.setEnabled(false);
        txtID.setEnabled(false);
        txtDep.setEnabled(false);
        txtJob.setEnabled(false);
        txtUserName.setEnabled(false);
        txtPassword.setEnabled(false);
        btnSubmit.setEnabled(false);
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        String name = txtName.getText();
        String username = txtUserName.getText();
        String password = txtPassword.getText();
        String department = txtDep.getText();
        String jobTitle = txtJob.getText();
        
        if (txtName.getText().length()==0 || txtPassword.getText().length()==0 || txtUserName.getText().length()==0 ||
            txtDep.getText().length()==0 || txtJob.getText().length()==0 )
        {
            JOptionPane.showMessageDialog(null, "Please ensure all fields are entered!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (!doctorOrg.getUserAccountDirectory().checkIfUsernameIsUnique(username)) {
            JOptionPane.showMessageDialog(null, "Doctor name already exist!", "Warning", JOptionPane.WARNING_MESSAGE);
        } 
        
        doctor = doctorOrg.getPersonDirectory().createDoctor(name);
        system.getDoctorDir().getDoctorList().add(doctor);
        userAccount = doctorOrg.getUserAccountDirectory().createUserAccount(username, password, doctor, new DoctorRole());
        userAccount.setPassword(password);
        userAccount.setUsername(username);
        doctor.setDepartment(department);
        doctor.setJobTitle(jobTitle);
        doctor.setName(name);
        
        JOptionPane.showMessageDialog(null, "Successfully created!");
        populateTable();
        txtName.setEnabled(false);
        txtID.setEnabled(false);
        txtDep.setEnabled(false);
        txtJob.setEnabled(false);
        txtUserName.setEnabled(false);
        txtPassword.setEnabled(false);
        btnSubmit.setEnabled(false);
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DoctorJTable;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDep;
    private javax.swing.JTextField txtDocName;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtJob;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables

}
